{"ast":null,"code":"var _jsxFileName = \"/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/hocs/pictureWeather/index.tsx\";\nimport './index.scss';\nimport React from \"react\";\nimport clouds from \"src/helpers/clouds\";\nimport wind from \"src/helpers/wind\";\nimport { sunriseSunset } from \"src/helpers/sunriseSunset\";\nimport ImgWeatherHoc from '../img'; // example\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PictureWeatherHok = _ref => {\n  let {\n    styles,\n    classNames\n  } = _ref;\n  const ImgWeatherSun = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.sun,\n    name: 'sun'\n  });\n  const ImgWeatherSoon = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.soon,\n    name: 'soon'\n  });\n  const ImgWeatherCloud = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.cloud,\n    name: 'cloud'\n  });\n  const ImgWeatherCloud2 = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.cloud2,\n    name: 'cloud2'\n  });\n  const ImgWeatherRain = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.rain,\n    name: 'rain'\n  });\n  const ImgWeatherWind = ImgWeatherHoc({\n    isClassName: classNames === null || classNames === void 0 ? void 0 : classNames.wind,\n    name: 'wind'\n  });\n\n  const PictureWeatherBase = _ref2 => {\n    let {\n      weatherNow,\n      city\n    } = _ref2;\n    // !!city && console.log('city ', city.sunrise, city.sunset, city.timezone )\n    // if (!!city) {\n    // console.log('city.sunrise ', city.sunrise)\n    // console.log('city.sunset ', city.sunset)\n    // console.log('city.timezone ', city.timezone)\n    // console.log('weatherNow.dt ', weatherNow.dt)}\n    const times = sunriseSunset(city.sunrise, city.sunset, city.timezone, weatherNow.dt);\n    const addLight = times.timesOfDay === 'light';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'picture_weather__body',\n        style: { ...styles\n        },\n        children: [addLight ? clouds(weatherNow.clouds.all) >= 1 && /*#__PURE__*/_jsxDEV(ImgWeatherCloud, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 50\n        }, this) : clouds(weatherNow.clouds.all) >= 1 && /*#__PURE__*/_jsxDEV(ImgWeatherCloud, {\n          amPm: 'am'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 50\n        }, this), addLight ? clouds(weatherNow.clouds.all) >= 2 && /*#__PURE__*/_jsxDEV(ImgWeatherCloud2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 50\n        }, this) : clouds(weatherNow.clouds.all) >= 2 && /*#__PURE__*/_jsxDEV(ImgWeatherCloud2, {\n          amPm: 'am'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 49\n        }, this), wind(weatherNow.wind.speed) !== 'слабый ветер' && /*#__PURE__*/_jsxDEV(ImgWeatherWind, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 60\n        }, this), clouds(weatherNow.clouds.all) < 3 && (addLight ? /*#__PURE__*/_jsxDEV(ImgWeatherSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(ImgWeatherSoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 79\n        }, this)), weatherNow.rain && /*#__PURE__*/_jsxDEV(ImgWeatherRain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addLight ? 'picture_weather__day' : 'picture_weather__night' // style={{background: `${addLight ? 'linear-gradient(rgb(171 192 255) 30%, rgb(187 0 8) 221%)' : 'linear-gradient(rgb(50, 46, 54) 30%, rgb(12 21 67) 221%)'}`, width: '100%', height: '100%'}}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  };\n\n  return PictureWeatherBase;\n};\n\n_c = PictureWeatherHok;\nexport default PictureWeatherHok;\n\nvar _c;\n\n$RefreshReg$(_c, \"PictureWeatherHok\");","map":{"version":3,"names":["React","clouds","wind","sunriseSunset","ImgWeatherHoc","PictureWeatherHok","styles","classNames","ImgWeatherSun","isClassName","sun","name","ImgWeatherSoon","soon","ImgWeatherCloud","cloud","ImgWeatherCloud2","cloud2","ImgWeatherRain","rain","ImgWeatherWind","PictureWeatherBase","weatherNow","city","times","sunrise","sunset","timezone","dt","addLight","timesOfDay","all","speed"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/hocs/pictureWeather/index.tsx"],"sourcesContent":["import './index.scss';\nimport React from \"react\";\nimport clouds from \"src/helpers/clouds\";\nimport wind from \"src/helpers/wind\";\nimport { Nowtime } from \"src/types/weather/nowtime\";\nimport { City, ListFiveDays } from \"src/types/weather/fiveDays\";\nimport { sunriseSunset } from \"src/helpers/sunriseSunset\";\nimport ImgWeatherHoc from '../img';\n\n\n\n// example\ntype CityExample = {\n  sunrise: number;\n  sunset: number;\n  timezone: number;\n}\ntype WeatherNowExample = {\n  dt: number;\n  clouds: {\n    all: number;\n  };\n  wind: {\n    speed: number;\n  };\n  rain?: {\n    \"3h\": number;\n  }\n}\n\n\n\ntype PictureWeatherHocTypeStyles = {\n  [styleName: string]: string;\n};\n\ntype PictureWeatherHocTypeClassName = {\n  sun: string,\n  soon: string,\n  cloud: string,\n  cloud2: string,\n  rain: string,\n  wind: string,\n};\n\ntype PictureWeatherBaseType = {\n  weatherNow: Nowtime | ListFiveDays | WeatherNowExample;\n  city?: City | CityExample;\n};\n\n\n\nconst PictureWeatherHok = (\n  {styles, classNames}: \n  {styles?: PictureWeatherHocTypeStyles, classNames?: PictureWeatherHocTypeClassName}\n)=> {\n\n  const ImgWeatherSun = ImgWeatherHoc({isClassName: classNames?.sun, name: 'sun'});\n  const ImgWeatherSoon = ImgWeatherHoc({isClassName: classNames?.soon, name: 'soon'});\n  const ImgWeatherCloud = ImgWeatherHoc({isClassName: classNames?.cloud, name: 'cloud'});\n  const ImgWeatherCloud2 = ImgWeatherHoc({isClassName: classNames?.cloud2, name: 'cloud2'});\n  const ImgWeatherRain = ImgWeatherHoc({isClassName: classNames?.rain, name: 'rain'});\n  const ImgWeatherWind = ImgWeatherHoc({isClassName: classNames?.wind, name: 'wind'});\n\n  const PictureWeatherBase: React.FC <PictureWeatherBaseType> = ({weatherNow, city})=> {\n    \n    // !!city && console.log('city ', city.sunrise, city.sunset, city.timezone )\n    // if (!!city) {\n    // console.log('city.sunrise ', city.sunrise)\n    // console.log('city.sunset ', city.sunset)\n    // console.log('city.timezone ', city.timezone)\n    // console.log('weatherNow.dt ', weatherNow.dt)}\n    \n    const times = sunriseSunset(city!.sunrise, city!.sunset, city!.timezone, weatherNow.dt)\n\n    const addLight = times.timesOfDay === 'light';\n\n    return <>\n\n\n      <div\n        className={'picture_weather__body'}\n        style={\n          {\n            ...styles\n          }\n        }\n      >\n\n        { \n          addLight ? \n          (clouds(weatherNow.clouds.all) >= 1 && <ImgWeatherCloud />) :\n          (clouds(weatherNow.clouds.all) >= 1 && <ImgWeatherCloud amPm={'am'} />)\n        }\n        { \n          addLight ? \n          (clouds(weatherNow.clouds.all) >= 2 && <ImgWeatherCloud2 />) :\n          clouds(weatherNow.clouds.all) >= 2 && <ImgWeatherCloud2 amPm={'am'} />\n        }\n\n        {wind(weatherNow.wind.speed) !== 'слабый ветер' && <ImgWeatherWind />}\n        {clouds(weatherNow.clouds.all) < 3 && (addLight ? <ImgWeatherSun /> : <ImgWeatherSoon />)}\n        {weatherNow.rain && <ImgWeatherRain />}\n        <div\n          className={addLight ? 'picture_weather__day' : 'picture_weather__night'}\n          // style={{background: `${addLight ? 'linear-gradient(rgb(171 192 255) 30%, rgb(187 0 8) 221%)' : 'linear-gradient(rgb(50, 46, 54) 30%, rgb(12 21 67) 221%)'}`, width: '100%', height: '100%'}}\n        ></div>\n        {/* <div style={{background: `radial-gradient(40% 50%, #FAECD5, #CAE4D8)`, width: '100%', height: '100%'}}></div> */}\n\n      </div>\n      \n    </>\n\n  };\n\n\n  return PictureWeatherBase;\n};\n\nexport default PictureWeatherHok;"],"mappings":"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"},"metadata":{},"sourceType":"module"}