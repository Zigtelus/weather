{"ast":null,"code":"var _jsxFileName = \"/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/components/Popups/PopupSignIn/index.tsx\",\n    _s = $RefreshSig$();\n\nimport './index.scss';\nimport { useRef, useState } from \"react\";\nimport LoadingAnimation from \"src/helpers/LoadingAnimation\";\nimport inputHoc from \"src/hocs/inputs/inputHoc\";\nimport PopupHoc from \"src/hocs/popup\";\nimport { useAppDispatch, useAppSelector } from \"src/hooks/redux\";\nimport { getUserActions } from \"src/store/users/actions/getUser.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PopupSignIn(_ref) {\n  _s();\n\n  let {\n    closeOpen\n  } = _ref;\n  const isUser = useAppSelector(state => state.ussersReducer);\n  const formRef = useRef();\n  const userMain = isUser.main;\n  const userLoading = isUser.getUsers.loading;\n  const dispatch = useAppDispatch();\n  const Inpt = inputHoc();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [textAuthorization, setTextAuthorization] = useState('Введите логин и пароль для авторизации');\n\n  const getUser = () => {\n    const body = {\n      \"password\": passwordRef.current.value,\n      \"email\": emailRef.current.value\n    };\n    dispatch(getUserActions(body));\n    setTextAuthorization('авторизуется');\n  };\n\n  const authorization = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: 'popup_sign_in__body',\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: 'popup_sign_in__title',\n      children: \"authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        \"textAlign\": \"center\",\n        \"width\": \"100%\"\n      },\n      children: !userLoading && (!!userMain ? `вы авторизовались` : 'Введите логин и пароль')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(LoadingAnimation, {\n      userLoading: userLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), !userMain && !userLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'popup_sign_in__write_places',\n        children: [/*#__PURE__*/_jsxDEV(Inpt, {\n          isPlaceholder: \"e-mail\",\n          isRef: emailRef,\n          isType: \"email\",\n          isName: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Inpt, {\n          isPlaceholder: \"password\",\n          isRef: passwordRef,\n          isType: \"password\",\n          isName: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), textAuthorization === 'авторизуется' && !userMain && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'popup_sign_in__btn',\n        children: /*#__PURE__*/_jsxDEV(Inpt, {\n          isType: 'submit',\n          isOnClick: getUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n\n  const Popup = PopupHoc();\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    close: closeOpen,\n    componentt: authorization,\n    isClassNamePopupBG: 'popup_bg__authorization',\n    isClassNamePopup: 'popup__authorization'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PopupSignIn, \"wxDRnGRlFd6UqiEJZ7LYz7LhNR0=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = PopupSignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupSignIn\");","map":{"version":3,"names":["useRef","useState","LoadingAnimation","inputHoc","PopupHoc","useAppDispatch","useAppSelector","getUserActions","PopupSignIn","closeOpen","isUser","state","ussersReducer","formRef","userMain","main","userLoading","getUsers","loading","dispatch","Inpt","emailRef","passwordRef","textAuthorization","setTextAuthorization","getUser","body","current","value","authorization","Popup"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/components/Popups/PopupSignIn/index.tsx"],"sourcesContent":["import './index.scss';\nimport { MutableRefObject, useRef, useState } from \"react\";\nimport LoadingAnimation from \"src/helpers/LoadingAnimation\";\nimport inputHoc from \"src/hocs/inputs/inputHoc\";\nimport PopupHoc from \"src/hocs/popup\";\nimport { useAppDispatch, useAppSelector } from \"src/hooks/redux\";\nimport { getUserActions } from \"src/store/users/actions/getUser.action\";\n\n\nexport default function PopupSignIn({closeOpen}: {closeOpen: ()=> void}): JSX.Element {\n\n  const isUser = useAppSelector(state => state.ussersReducer);\n  const formRef = useRef() as MutableRefObject<HTMLFormElement>;\n  const userMain = isUser.main;\n  const userLoading = isUser.getUsers.loading;\n\n  const dispatch = useAppDispatch();\n\n  const Inpt = inputHoc();\n\n  const emailRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const passwordRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const [textAuthorization, setTextAuthorization] = useState <string> ('Введите логин и пароль для авторизации');\n\n\n  const getUser = ()=> {\n\n    const body = {\n      \"password\": passwordRef.current.value,\n      \"email\": emailRef.current.value,\n    };\n\n    dispatch(getUserActions(body));\n    setTextAuthorization('авторизуется')\n  }\n\n\n\n  const authorization = \n  <form \n    className={'popup_sign_in__body'}\n    ref={formRef}\n  >\n        \n    <h2 className={'popup_sign_in__title'}>authorization</h2>\n    \n    <p style={{\"textAlign\": \"center\", \"width\": \"100%\"}}>\n\n      {\n        !userLoading &&\n        (\n          !!userMain ?\n          `вы авторизовались` :\n          'Введите логин и пароль'\n        )\n      }\n    </p>\n\n    <LoadingAnimation userLoading={userLoading} />\n\n    {\n      !userMain && \n      (!userLoading &&\n      (<>\n\n        <div className={'popup_sign_in__write_places'}>\n          <Inpt \n            isPlaceholder=\"e-mail\" \n            isRef={emailRef}\n            isType={\"email\"}\n            isName={\"email\"}\n          />\n\n          <Inpt \n            isPlaceholder=\"password\" \n            isRef={passwordRef}\n            isType={\"password\"}\n            isName={\"password\"}\n          />\n        </div>\n\n        {\n          textAuthorization === 'авторизуется' &&\n          !userMain &&\n          <p>пользователь не найден</p>\n        }\n\n        <div className={'popup_sign_in__btn'}>\n          <Inpt \n            isType={'submit'}\n            isOnClick={getUser}\n          />\n        </div>\n\n      </>))\n    }\n\n  </form>\n\n\n  const Popup = PopupHoc();\n\n  return <Popup \n    close={closeOpen} \n    componentt={authorization}\n    isClassNamePopupBG={'popup_bg__authorization'}\n    isClassNamePopup={'popup__authorization'}\n  /> \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}