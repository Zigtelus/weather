{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createAPI, dataUser, KEY } from \"../createApi\";\nconst api = createAPI();\nexport const nameCityAction = createAsyncThunk('weather/nameCity', async (_, thunkAPI) => {\n  // \n  // https://api.openweathermap.org/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c\n  // realy\n  const secondPartURL = `/geo/1.0/reverse?lat=${dataUser.lat}&lon=${dataUser.lon}&appid=${KEY}`; //washington\n  // const secondPartURL = `/geo/1.0/reverse?lat=38.87729&lon=-77.05274&appid=${KEY}`;\n  // const secondPartURL = `/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n  // павлодар\n  // const secondPartURL = `/geo/1.0/reverse?lat=52.2833300&lon=76.9666700&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n  // moscow\n  // const secondPartURL = `/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n\n  console.log('nameCityAction ', secondPartURL);\n\n  try {\n    const res = await api.get(`${secondPartURL}`);\n    return res.data;\n  } catch (e) {\n    console.log('initialStateNC'); // return initialStateNC;\n  }\n\n  ;\n});","map":{"version":3,"names":["createAsyncThunk","createAPI","dataUser","KEY","api","nameCityAction","_","thunkAPI","secondPartURL","lat","lon","console","log","res","get","data","e"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/store/weather/actions/nameCity.action.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createAPI, dataUser, KEY } from \"../createApi\";\n\n\n\nconst api = createAPI();\n\nexport const nameCityAction = createAsyncThunk(\n    'weather/nameCity',\n    async (_, thunkAPI) => {\n        \n        // \n        // https://api.openweathermap.org/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c\n\n\n        // realy\n        const secondPartURL = `/geo/1.0/reverse?lat=${dataUser.lat}&lon=${dataUser.lon}&appid=${KEY}`;\n\n        //washington\n        // const secondPartURL = `/geo/1.0/reverse?lat=38.87729&lon=-77.05274&appid=${KEY}`;\n\n         \n        // const secondPartURL = `/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n\n        // павлодар\n        // const secondPartURL = `/geo/1.0/reverse?lat=52.2833300&lon=76.9666700&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n\n        // moscow\n        // const secondPartURL = `/geo/1.0/reverse?lat=55.7522200&lon=37.6155600&appid=94d073c2667e3ab1d500b71c487bdf7c`;\n\n        console.log('nameCityAction ', secondPartURL)\n\n        try {\n            const res = await api.get<string>(`${secondPartURL}`);\n            return res.data;\n        } catch (e) {\n            console.log('initialStateNC')\n            // return initialStateNC;\n        };\n        \n    }\n);"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,GAA9B,QAAyC,cAAzC;AAIA,MAAMC,GAAG,GAAGH,SAAS,EAArB;AAEA,OAAO,MAAMI,cAAc,GAAGL,gBAAgB,CAC1C,kBAD0C,EAE1C,OAAOM,CAAP,EAAUC,QAAV,KAAuB;EAEnB;EACA;EAGA;EACA,MAAMC,aAAa,GAAI,wBAAuBN,QAAQ,CAACO,GAAI,QAAOP,QAAQ,CAACQ,GAAI,UAASP,GAAI,EAA5F,CAPmB,CASnB;EACA;EAGA;EAEA;EACA;EAEA;EACA;;EAEAQ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,aAA/B;;EAEA,IAAI;IACA,MAAMK,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAiB,GAAEN,aAAc,EAAjC,CAAlB;IACA,OAAOK,GAAG,CAACE,IAAX;EACH,CAHD,CAGE,OAAOC,CAAP,EAAU;IACRL,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADQ,CAER;EACH;;EAAA;AAEJ,CAjCyC,CAAvC"},"metadata":{},"sourceType":"module"}