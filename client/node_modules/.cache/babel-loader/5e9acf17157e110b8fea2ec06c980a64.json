{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { commentsAction } from \"../actions/comments.action\";\nconst initialState = {\n  \"main\": {\n    articleId: '',\n    commentsId: '',\n    comments: [{\n      commentId: '',\n      auterId: '',\n      name: '',\n      family: '',\n      text: '',\n      likes: [],\n      dislikes: [],\n      dateCreation: '',\n      dateLastEdit: {\n        state: false,\n        date: ''\n      }\n    }]\n  }\n};\nexport const commentsSlice = createSlice({\n  name: 'commentsSlice',\n  initialState,\n  reducers: {\n    addComment(state, action) {\n      // state.main.comments = [...state.main.comments, {...action.payload}]\n      state.main.comments = action.payload;\n    },\n\n    removeComment(state, action) {\n      console.log(action.payload);\n      state.main.comments = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [commentsAction.fulfilled.type]: (state, action) => {\n      state.main = { ...action.payload\n      };\n\n      if (!!action.payload.comments) {\n        state.main.comments = [...action.payload.comments.reverse()];\n      } else {\n        state.main.comments = [];\n      }\n    },\n    [commentsAction.pending.type]: (state, action) => {},\n    [commentsAction.rejected.type]: (state, action) => console.log('error')\n  }\n});\nexport const {\n  addComment,\n  removeComment\n} = commentsSlice.actions;\nexport default commentsSlice.reducer;","map":{"version":3,"names":["createSlice","commentsAction","initialState","articleId","commentsId","comments","commentId","auterId","name","family","text","likes","dislikes","dateCreation","dateLastEdit","state","date","commentsSlice","reducers","addComment","action","main","payload","removeComment","console","log","extraReducers","fulfilled","type","reverse","pending","rejected","actions","reducer"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/store/comments/slices/comments.slice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { commentsAction } from \"../actions/comments.action\";\n\n\n\nexport type CommentArticle = {\n  commentId: string;\n  auterId: string;\n  name: string;\n  family: string;\n  text: string;\n  likes: string[];\n  dislikes: string[];\n  dateCreation: string;\n  dateLastEdit: {\n    state: boolean;\n    date: string;\n  };\n}\n\nexport type CommentsArticle = {\n  articleId: string;\n  commentsId: string;\n  comments: CommentArticle[];\n}\n\nexport type InitialState = {\n  \"main\": CommentsArticle;\n}\n\nconst initialState: InitialState = {\n  \"main\": {\n    articleId: '',\n    commentsId: '',\n    comments: [{\n      commentId: '',\n      auterId: '',\n      name: '',\n      family: '',\n      text: '',\n      likes: [],\n      dislikes: [],\n      dateCreation: '',\n      dateLastEdit: {\n        state: false,\n        date: ''\n      },\n    }]\n  }\n};\n\nexport const commentsSlice = createSlice({\n  name: 'commentsSlice',\n  initialState,\n  reducers: {\n    addComment(state, action) {\n      // state.main.comments = [...state.main.comments, {...action.payload}]\n      state.main.comments = action.payload\n    },\n    removeComment(state, action) {\n      console.log(action.payload)\n      state.main.comments = action.payload\n      \n    }\n  },\n  extraReducers: {\n    [commentsAction.fulfilled.type]: (state, action) => {\n      state.main = {...action.payload}\n      if (!!action.payload.comments) {\n        state.main.comments = [...action.payload.comments.reverse()]\n      } else {\n        state.main.comments = []\n      }\n    },\n    [commentsAction.pending.type]: (state, action) => {\n        \n    },\n    [commentsAction.rejected.type]: (state, action) => console.log('error')\n  }\n})\n\nexport const { addComment, removeComment } = commentsSlice.actions\nexport default commentsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AA6BA,MAAMC,YAA0B,GAAG;EACjC,QAAQ;IACNC,SAAS,EAAE,EADL;IAENC,UAAU,EAAE,EAFN;IAGNC,QAAQ,EAAE,CAAC;MACTC,SAAS,EAAE,EADF;MAETC,OAAO,EAAE,EAFA;MAGTC,IAAI,EAAE,EAHG;MAITC,MAAM,EAAE,EAJC;MAKTC,IAAI,EAAE,EALG;MAMTC,KAAK,EAAE,EANE;MAOTC,QAAQ,EAAE,EAPD;MAQTC,YAAY,EAAE,EARL;MASTC,YAAY,EAAE;QACZC,KAAK,EAAE,KADK;QAEZC,IAAI,EAAE;MAFM;IATL,CAAD;EAHJ;AADyB,CAAnC;AAqBA,OAAO,MAAMC,aAAa,GAAGjB,WAAW,CAAC;EACvCQ,IAAI,EAAE,eADiC;EAEvCN,YAFuC;EAGvCgB,QAAQ,EAAE;IACRC,UAAU,CAACJ,KAAD,EAAQK,MAAR,EAAgB;MACxB;MACAL,KAAK,CAACM,IAAN,CAAWhB,QAAX,GAAsBe,MAAM,CAACE,OAA7B;IACD,CAJO;;IAKRC,aAAa,CAACR,KAAD,EAAQK,MAAR,EAAgB;MAC3BI,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;MACAP,KAAK,CAACM,IAAN,CAAWhB,QAAX,GAAsBe,MAAM,CAACE,OAA7B;IAED;;EATO,CAH6B;EAcvCI,aAAa,EAAE;IACb,CAACzB,cAAc,CAAC0B,SAAf,CAAyBC,IAA1B,GAAiC,CAACb,KAAD,EAAQK,MAAR,KAAmB;MAClDL,KAAK,CAACM,IAAN,GAAa,EAAC,GAAGD,MAAM,CAACE;MAAX,CAAb;;MACA,IAAI,CAAC,CAACF,MAAM,CAACE,OAAP,CAAejB,QAArB,EAA+B;QAC7BU,KAAK,CAACM,IAAN,CAAWhB,QAAX,GAAsB,CAAC,GAAGe,MAAM,CAACE,OAAP,CAAejB,QAAf,CAAwBwB,OAAxB,EAAJ,CAAtB;MACD,CAFD,MAEO;QACLd,KAAK,CAACM,IAAN,CAAWhB,QAAX,GAAsB,EAAtB;MACD;IACF,CARY;IASb,CAACJ,cAAc,CAAC6B,OAAf,CAAuBF,IAAxB,GAA+B,CAACb,KAAD,EAAQK,MAAR,KAAmB,CAEjD,CAXY;IAYb,CAACnB,cAAc,CAAC8B,QAAf,CAAwBH,IAAzB,GAAgC,CAACb,KAAD,EAAQK,MAAR,KAAmBI,OAAO,CAACC,GAAR,CAAY,OAAZ;EAZtC;AAdwB,CAAD,CAAjC;AA8BP,OAAO,MAAM;EAAEN,UAAF;EAAcI;AAAd,IAAgCN,aAAa,CAACe,OAApD;AACP,eAAef,aAAa,CAACgB,OAA7B"},"metadata":{},"sourceType":"module"}