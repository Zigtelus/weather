{"ast":null,"code":"export function timeZone(fiveDaysWeather, index) {\n  const timeZoneInHurs = fiveDaysWeather.city.timezone / 60 / 60;\n  var x = new Date();\n  var currentTimeZoneOffsetInHours = x.getTimezoneOffset() / 60;\n  let timeZoneInMinuts = timeZoneInHurs + currentTimeZoneOffsetInHours;\n\n  if (timeZoneInMinuts < 0) {\n    timeZoneInMinuts = timeZoneInMinuts * 60 * 60;\n  } else {\n    timeZoneInMinuts = timeZoneInMinuts * 60 * 60;\n  }\n\n  function timeConverter(UNIX_timestamp) {\n    const a = new Date(UNIX_timestamp * 1000);\n    const year = a.getFullYear();\n    const month = a.getMonth();\n    const date = a.getDate();\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    let month1 = String(month);\n\n    if (month < 10) {\n      month1 = '0' + month;\n    }\n\n    let date1 = `${date}`;\n\n    if (date < 10) {\n      date1 = '0' + date;\n    }\n\n    let hour1 = `${hour}`;\n\n    if (hour < 10) {\n      hour1 = '0' + hour;\n    }\n\n    let min1 = `${min}`;\n\n    if (min < 10) {\n      min1 = '0' + min;\n    }\n\n    let sec1 = `${sec}`;\n\n    if (sec < 10) {\n      sec1 = '0' + sec;\n    }\n\n    let time = year + '-' + month1 + '-' + date1 + ' ' + hour1 + ':' + min1 + ':' + sec1;\n    return time;\n  }\n\n  const isTimeConverter = timeConverter(fiveDaysWeather.list[index].dt + timeZoneInMinuts);\n  return isTimeConverter;\n}\n;","map":{"version":3,"names":["timeZone","fiveDaysWeather","index","timeZoneInHurs","city","timezone","x","Date","currentTimeZoneOffsetInHours","getTimezoneOffset","timeZoneInMinuts","timeConverter","UNIX_timestamp","a","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","month1","String","date1","hour1","min1","sec1","time","isTimeConverter","list","dt"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/helpers/timeZone.ts"],"sourcesContent":["import { FiveDays } from \"src/types/weather/fiveDays\";\n\n\n\n\nexport function timeZone(fiveDaysWeather: FiveDays, index: number) {\n\n  const timeZoneInHurs = fiveDaysWeather.city.timezone / 60/ 60;\n\n  \n\n  var x = new Date();\n  var currentTimeZoneOffsetInHours = x.getTimezoneOffset() / 60;\n  let timeZoneInMinuts: number = timeZoneInHurs + currentTimeZoneOffsetInHours\n\n  if (timeZoneInMinuts < 0) {\n    timeZoneInMinuts = timeZoneInMinuts * 60 * 60\n  } else {\n    timeZoneInMinuts = timeZoneInMinuts * 60 * 60\n  }\n\n\n  function timeConverter(UNIX_timestamp: number){\n    const a = new Date(UNIX_timestamp * 1000);\n    const year = a.getFullYear();\n    const month = a.getMonth();\n    const date = a.getDate();\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n\n    let month1 = String(month);\n    if (month < 10) {\n      month1 = '0' + month\n    }\n\n    let date1 = `${date}`;\n    if (date < 10) {\n      date1 = '0' + date\n    }\n\n    let hour1 = `${hour}`;\n    if (hour < 10) {\n      hour1 = '0' + hour\n    }\n\n    let min1 = `${min}`;\n    if (min < 10) {\n      min1 = '0' + min\n    }\n\n    let sec1 = `${sec}`;\n    if (sec < 10) {\n      sec1 = '0' + sec\n    }\n\n    let time = year + '-' + month1 + '-' + date1 + ' ' + hour1 + ':' + min1 + ':' + sec1 ;\n    return time;\n  }\n\n  const isTimeConverter = timeConverter(fiveDaysWeather.list[index].dt + timeZoneInMinuts)\n\n\n  return isTimeConverter;\n};"],"mappings":"AAKA,OAAO,SAASA,QAAT,CAAkBC,eAAlB,EAA6CC,KAA7C,EAA4D;EAEjE,MAAMC,cAAc,GAAGF,eAAe,CAACG,IAAhB,CAAqBC,QAArB,GAAgC,EAAhC,GAAoC,EAA3D;EAIA,IAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;EACA,IAAIC,4BAA4B,GAAGF,CAAC,CAACG,iBAAF,KAAwB,EAA3D;EACA,IAAIC,gBAAwB,GAAGP,cAAc,GAAGK,4BAAhD;;EAEA,IAAIE,gBAAgB,GAAG,CAAvB,EAA0B;IACxBA,gBAAgB,GAAGA,gBAAgB,GAAG,EAAnB,GAAwB,EAA3C;EACD,CAFD,MAEO;IACLA,gBAAgB,GAAGA,gBAAgB,GAAG,EAAnB,GAAwB,EAA3C;EACD;;EAGD,SAASC,aAAT,CAAuBC,cAAvB,EAA8C;IAC5C,MAAMC,CAAC,GAAG,IAAIN,IAAJ,CAASK,cAAc,GAAG,IAA1B,CAAV;IACA,MAAME,IAAI,GAAGD,CAAC,CAACE,WAAF,EAAb;IACA,MAAMC,KAAK,GAAGH,CAAC,CAACI,QAAF,EAAd;IACA,MAAMC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAb;IACA,MAAMC,IAAI,GAAGP,CAAC,CAACQ,QAAF,EAAb;IACA,MAAMC,GAAG,GAAGT,CAAC,CAACU,UAAF,EAAZ;IACA,MAAMC,GAAG,GAAGX,CAAC,CAACY,UAAF,EAAZ;IAEA,IAAIC,MAAM,GAAGC,MAAM,CAACX,KAAD,CAAnB;;IACA,IAAIA,KAAK,GAAG,EAAZ,EAAgB;MACdU,MAAM,GAAG,MAAMV,KAAf;IACD;;IAED,IAAIY,KAAK,GAAI,GAAEV,IAAK,EAApB;;IACA,IAAIA,IAAI,GAAG,EAAX,EAAe;MACbU,KAAK,GAAG,MAAMV,IAAd;IACD;;IAED,IAAIW,KAAK,GAAI,GAAET,IAAK,EAApB;;IACA,IAAIA,IAAI,GAAG,EAAX,EAAe;MACbS,KAAK,GAAG,MAAMT,IAAd;IACD;;IAED,IAAIU,IAAI,GAAI,GAAER,GAAI,EAAlB;;IACA,IAAIA,GAAG,GAAG,EAAV,EAAc;MACZQ,IAAI,GAAG,MAAMR,GAAb;IACD;;IAED,IAAIS,IAAI,GAAI,GAAEP,GAAI,EAAlB;;IACA,IAAIA,GAAG,GAAG,EAAV,EAAc;MACZO,IAAI,GAAG,MAAMP,GAAb;IACD;;IAED,IAAIQ,IAAI,GAAGlB,IAAI,GAAG,GAAP,GAAaY,MAAb,GAAsB,GAAtB,GAA4BE,KAA5B,GAAoC,GAApC,GAA0CC,KAA1C,GAAkD,GAAlD,GAAwDC,IAAxD,GAA+D,GAA/D,GAAqEC,IAAhF;IACA,OAAOC,IAAP;EACD;;EAED,MAAMC,eAAe,GAAGtB,aAAa,CAACV,eAAe,CAACiC,IAAhB,CAAqBhC,KAArB,EAA4BiC,EAA5B,GAAiCzB,gBAAlC,CAArC;EAGA,OAAOuB,eAAP;AACD;AAAA"},"metadata":{},"sourceType":"module"}