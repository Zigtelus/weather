{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nowtimeAction } from \"../actions/nowtime.action\";\nexport const initialStateNT = {\n  \"main\": {\n    \"coord\": {\n      \"lon\": 0,\n      \"lat\": 0\n    },\n    \"weather\": [{\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }],\n    \"base\": \"\",\n    \"main\": {\n      \"temp\": 0,\n      \"feels_like\": 0,\n      \"temp_min\": 0,\n      \"temp_max\": 0,\n      \"pressure\": 0,\n      \"humidity\": 0,\n      \"sea_level\": 0,\n      \"grnd_level\": 0\n    },\n    \"visibility\": 0,\n    \"wind\": {\n      \"speed\": 0,\n      \"deg\": 0,\n      \"gust\": 0\n    },\n    \"clouds\": {\n      \"all\": 0\n    },\n    \"dt\": 0,\n    \"sys\": {\n      \"type\": 0,\n      \"id\": 0,\n      \"country\": \"\",\n      \"sunrise\": 0,\n      \"sunset\": 0\n    },\n    \"timezone\": 0,\n    \"id\": 0,\n    \"name\": \"\",\n    \"cod\": 0\n  },\n  \"loading\": false\n};\nexport const nowtimeSlice = createSlice({\n  name: 'nowtime',\n  initialState: initialStateNT,\n  reducers: {\n    numberPlus(state, action) {\n      /*\n      без редюсера синхронного не срабатывает ассинхронный редюсер\n      */\n    }\n\n  },\n  extraReducers: {\n    [nowtimeAction.fulfilled.type]: (state, action) => {\n      state.main = { ...action.payload\n      };\n      state.loading = false;\n    },\n    [nowtimeAction.pending.type]: (state, action) => {\n      state.loading = true;\n    },\n    [nowtimeAction.rejected.type]: (state, action) => {\n      console.log('error nowtime');\n    }\n  }\n});\nexport default nowtimeSlice.reducer;","map":{"version":3,"names":["createSlice","nowtimeAction","initialStateNT","nowtimeSlice","name","initialState","reducers","numberPlus","state","action","extraReducers","fulfilled","type","main","payload","loading","pending","rejected","console","log","reducer"],"sources":["/Users/gregory/Desktop/untitled folder 2/wwww/weather/client/src/store/weather/slices/nowtime.slice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { Nowtime } from \"src/types/weather/nowtime\";\nimport { nowtimeAction } from \"../actions/nowtime.action\";\n\ntype InitialState = {\n  \"main\": Nowtime;\n  \"loading\"?: boolean;\n};\n\n\nexport const initialStateNT: InitialState = {\n  \"main\": {\n    \"coord\": {\n    \"lon\": 0,\n    \"lat\": 0,\n    },\n    \"weather\": [\n    {\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\",\n    }\n    ],\n    \"base\": \"\",\n    \"main\": {\n      \"temp\": 0,\n      \"feels_like\": 0,\n      \"temp_min\": 0,\n      \"temp_max\": 0,\n      \"pressure\": 0,\n      \"humidity\": 0,\n      \"sea_level\": 0,\n      \"grnd_level\": 0,\n    },\n    \"visibility\": 0,\n    \"wind\": {\n      \"speed\": 0,\n      \"deg\": 0,\n      \"gust\": 0,\n    },\n    \"clouds\": {\n      \"all\": 0,\n    },\n    \"dt\": 0,\n    \"sys\": {\n      \"type\": 0,\n      \"id\": 0,\n      \"country\": \"\",\n      \"sunrise\": 0,\n      \"sunset\": 0,\n    },\n    \"timezone\": 0,\n    \"id\": 0,\n    \"name\": \"\",\n    \"cod\": 0,\n  },\n  \"loading\": false,\n};\n\n\nexport const nowtimeSlice = createSlice({\n  name: 'nowtime',\n  initialState: initialStateNT,\n  reducers: {\n    numberPlus(state, action) {\n      /*\n      без редюсера синхронного не срабатывает ассинхронный редюсер\n      */\n    }\n  },\n  extraReducers: {\n    [nowtimeAction.fulfilled.type]: (state, action) => {\n      state.main = {...action.payload};\n      state.loading = false;\n    },\n    [nowtimeAction.pending.type]: (state, action) => {\n      state.loading = true;\n    },\n    [nowtimeAction.rejected.type]: (state, action) => {\n      console.log('error nowtime')\n    }\n  }\n});\n\n\n\nexport default nowtimeSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AAQA,OAAO,MAAMC,cAA4B,GAAG;EAC1C,QAAQ;IACN,SAAS;MACT,OAAO,CADE;MAET,OAAO;IAFE,CADH;IAKN,WAAW,CACX;MACE,MAAM,CADR;MAEE,QAAQ,EAFV;MAGE,eAAe,EAHjB;MAIE,QAAQ;IAJV,CADW,CALL;IAaN,QAAQ,EAbF;IAcN,QAAQ;MACN,QAAQ,CADF;MAEN,cAAc,CAFR;MAGN,YAAY,CAHN;MAIN,YAAY,CAJN;MAKN,YAAY,CALN;MAMN,YAAY,CANN;MAON,aAAa,CAPP;MAQN,cAAc;IARR,CAdF;IAwBN,cAAc,CAxBR;IAyBN,QAAQ;MACN,SAAS,CADH;MAEN,OAAO,CAFD;MAGN,QAAQ;IAHF,CAzBF;IA8BN,UAAU;MACR,OAAO;IADC,CA9BJ;IAiCN,MAAM,CAjCA;IAkCN,OAAO;MACL,QAAQ,CADH;MAEL,MAAM,CAFD;MAGL,WAAW,EAHN;MAIL,WAAW,CAJN;MAKL,UAAU;IALL,CAlCD;IAyCN,YAAY,CAzCN;IA0CN,MAAM,CA1CA;IA2CN,QAAQ,EA3CF;IA4CN,OAAO;EA5CD,CADkC;EA+C1C,WAAW;AA/C+B,CAArC;AAmDP,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SADgC;EAEtCC,YAAY,EAAEH,cAFwB;EAGtCI,QAAQ,EAAE;IACRC,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACxB;AACN;AACA;IACK;;EALO,CAH4B;EAUtCC,aAAa,EAAE;IACb,CAACT,aAAa,CAACU,SAAd,CAAwBC,IAAzB,GAAgC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACjDD,KAAK,CAACK,IAAN,GAAa,EAAC,GAAGJ,MAAM,CAACK;MAAX,CAAb;MACAN,KAAK,CAACO,OAAN,GAAgB,KAAhB;IACD,CAJY;IAKb,CAACd,aAAa,CAACe,OAAd,CAAsBJ,IAAvB,GAA8B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC/CD,KAAK,CAACO,OAAN,GAAgB,IAAhB;IACD,CAPY;IAQb,CAACd,aAAa,CAACgB,QAAd,CAAuBL,IAAxB,GAA+B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAChDS,OAAO,CAACC,GAAR,CAAY,eAAZ;IACD;EAVY;AAVuB,CAAD,CAAhC;AA0BP,eAAehB,YAAY,CAACiB,OAA5B"},"metadata":{},"sourceType":"module"}